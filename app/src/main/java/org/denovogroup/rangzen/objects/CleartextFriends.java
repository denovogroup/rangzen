// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/barathraghavan/code/rangzen/rangzen/buck-out/gen/proto-repo/compile_protobufs__srcs/CleartextFriends.proto
package org.denovogroup.rangzen.objects;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

/**
 * Protobuf representation of a list of friends (represented as strings) to be
 * sent in the clear over the wire to a communication partner. This is used in
 * the simplified implementation without crypto and SHOULD NOT BE USED when
 * private-set intersection is in use.
 */
public final class CleartextFriends extends Message {

  public static final List<String> DEFAULT_FRIENDS = Collections.emptyList();

  /**
   * A list of friends, represented as opaque String-encoded friend ids.
   */
  @ProtoField(tag = 1, type = STRING, label = REPEATED)
  public final List<String> friends;

  public CleartextFriends(List<String> friends) {
    this.friends = immutableCopyOf(friends);
  }

  private CleartextFriends(Builder builder) {
    this(builder.friends);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CleartextFriends)) return false;
    return equals(friends, ((CleartextFriends) other).friends);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = friends != null ? friends.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<CleartextFriends> {

    public List<String> friends;

    public Builder() {
    }

    public Builder(CleartextFriends message) {
      super(message);
      if (message == null) return;
      this.friends = copyOf(message.friends);
    }

    /**
     * A list of friends, represented as opaque String-encoded friend ids.
     */
    public Builder friends(List<String> friends) {
      this.friends = checkForNulls(friends);
      return this;
    }

    @Override
    public CleartextFriends build() {
      return new CleartextFriends(this);
    }
  }
}
