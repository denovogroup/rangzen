// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/barathraghavan/code/rangzen/rangzen/buck-out/gen/proto-repo/compile_protobufs__srcs/CleartextMessages.proto
package org.denovogroup.rangzen.objects;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Label.REPEATED;

/**
 * Protobuf representation of a set of messages to be send over the wire to
 * a communication partner. Each message is a nested RangzenMessage protobuf message.
 */
public final class CleartextMessages extends Message {

  public static final List<RangzenMessage> DEFAULT_MESSAGES = Collections.emptyList();

  /**
   * This is called a RangzenMessage to avoid ambiguity with Wire.Message.
   * It represents a message and its priority.
   * A list of messages.
   */
  @ProtoField(tag = 1, label = REPEATED)
  public final List<RangzenMessage> messages;

  public CleartextMessages(List<RangzenMessage> messages) {
    this.messages = immutableCopyOf(messages);
  }

  private CleartextMessages(Builder builder) {
    this(builder.messages);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CleartextMessages)) return false;
    return equals(messages, ((CleartextMessages) other).messages);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = messages != null ? messages.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<CleartextMessages> {

    public List<RangzenMessage> messages;

    public Builder() {
    }

    public Builder(CleartextMessages message) {
      super(message);
      if (message == null) return;
      this.messages = copyOf(message.messages);
    }

    /**
     * This is called a RangzenMessage to avoid ambiguity with Wire.Message.
     * It represents a message and its priority.
     * A list of messages.
     */
    public Builder messages(List<RangzenMessage> messages) {
      this.messages = checkForNulls(messages);
      return this;
    }

    @Override
    public CleartextMessages build() {
      return new CleartextMessages(this);
    }
  }
}
