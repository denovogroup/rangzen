// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/barathraghavan/code/rangzen/rangzen/buck-out/gen/proto-repo/compile_protobufs__srcs/ClientMessage.proto
package org.denovogroup.rangzen.objects;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Label.REPEATED;

/**
 * Data sent by the "client" in a PSI exchange.
 */
public final class ClientMessage extends Message {

  public static final List<RangzenMessage> DEFAULT_MESSAGES = Collections.emptyList();
  public static final List<ByteString> DEFAULT_BLINDEDFRIENDS = Collections.emptyList();

  /**
   * The client's messages to propagate.
   */
  @ProtoField(tag = 1, label = REPEATED)
  public final List<RangzenMessage> messages;

  /**
   * The client's friends, blinded.
   */
  @ProtoField(tag = 2, type = BYTES, label = REPEATED)
  public final List<ByteString> blindedFriends;

  public ClientMessage(List<RangzenMessage> messages, List<ByteString> blindedFriends) {
    this.messages = immutableCopyOf(messages);
    this.blindedFriends = immutableCopyOf(blindedFriends);
  }

  private ClientMessage(Builder builder) {
    this(builder.messages, builder.blindedFriends);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ClientMessage)) return false;
    ClientMessage o = (ClientMessage) other;
    return equals(messages, o.messages)
        && equals(blindedFriends, o.blindedFriends);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = messages != null ? messages.hashCode() : 1;
      result = result * 37 + (blindedFriends != null ? blindedFriends.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ClientMessage> {

    public List<RangzenMessage> messages;
    public List<ByteString> blindedFriends;

    public Builder() {
    }

    public Builder(ClientMessage message) {
      super(message);
      if (message == null) return;
      this.messages = copyOf(message.messages);
      this.blindedFriends = copyOf(message.blindedFriends);
    }

    /**
     * The client's messages to propagate.
     */
    public Builder messages(List<RangzenMessage> messages) {
      this.messages = checkForNulls(messages);
      return this;
    }

    /**
     * The client's friends, blinded.
     */
    public Builder blindedFriends(List<ByteString> blindedFriends) {
      this.blindedFriends = checkForNulls(blindedFriends);
      return this;
    }

    @Override
    public ClientMessage build() {
      return new ClientMessage(this);
    }
  }
}
