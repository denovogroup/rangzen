// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/barathraghavan/code/rangzen/rangzen/buck-out/gen/proto-repo/compile_protobufs__srcs/ServerMessage.proto
package org.denovogroup.rangzen.objects;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Label.REPEATED;

/**
 * Data sent by the "server" in a PSI exchange.
 */
public final class ServerMessage extends Message {

  public static final List<ByteString> DEFAULT_DOUBLEBLINDEDFRIENDS = Collections.emptyList();
  public static final List<ByteString> DEFAULT_HASHEDBLINDEDFRIENDS = Collections.emptyList();

  /**
   * Double blinded friends of the client.
   */
  @ProtoField(tag = 1, type = BYTES, label = REPEATED)
  public final List<ByteString> doubleBlindedFriends;

  /**
   * Hashed blinded friends of the server.
   */
  @ProtoField(tag = 2, type = BYTES, label = REPEATED)
  public final List<ByteString> hashedBlindedFriends;

  public ServerMessage(List<ByteString> doubleBlindedFriends, List<ByteString> hashedBlindedFriends) {
    this.doubleBlindedFriends = immutableCopyOf(doubleBlindedFriends);
    this.hashedBlindedFriends = immutableCopyOf(hashedBlindedFriends);
  }

  private ServerMessage(Builder builder) {
    this(builder.doubleBlindedFriends, builder.hashedBlindedFriends);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ServerMessage)) return false;
    ServerMessage o = (ServerMessage) other;
    return equals(doubleBlindedFriends, o.doubleBlindedFriends)
        && equals(hashedBlindedFriends, o.hashedBlindedFriends);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = doubleBlindedFriends != null ? doubleBlindedFriends.hashCode() : 1;
      result = result * 37 + (hashedBlindedFriends != null ? hashedBlindedFriends.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ServerMessage> {

    public List<ByteString> doubleBlindedFriends;
    public List<ByteString> hashedBlindedFriends;

    public Builder() {
    }

    public Builder(ServerMessage message) {
      super(message);
      if (message == null) return;
      this.doubleBlindedFriends = copyOf(message.doubleBlindedFriends);
      this.hashedBlindedFriends = copyOf(message.hashedBlindedFriends);
    }

    /**
     * Double blinded friends of the client.
     */
    public Builder doubleBlindedFriends(List<ByteString> doubleBlindedFriends) {
      this.doubleBlindedFriends = checkForNulls(doubleBlindedFriends);
      return this;
    }

    /**
     * Hashed blinded friends of the server.
     */
    public Builder hashedBlindedFriends(List<ByteString> hashedBlindedFriends) {
      this.hashedBlindedFriends = checkForNulls(hashedBlindedFriends);
      return this;
    }

    @Override
    public ServerMessage build() {
      return new ServerMessage(this);
    }
  }
}
